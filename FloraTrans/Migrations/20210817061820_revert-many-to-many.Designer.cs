// <auto-generated />
using System;
using FloraTrans.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FloraTrans.Migrations
{
    [DbContext(typeof(FloraTransContext))]
    [Migration("20210817061820_revert-many-to-many")]
    partial class revertmanytomany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FloraTrans.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CVR")
                        .HasColumnType("int");

                    b.Property<int?>("ContactID")
                        .HasColumnType("int");

                    b.HasKey("ClientID");

                    b.HasIndex("ContactID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FloraTrans.Models.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FloraTrans.Models.Container", b =>
                {
                    b.Property<int>("CCTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("ClientID1")
                        .HasColumnType("int");

                    b.Property<bool>("Lost")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Rented")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Returned")
                        .HasColumnType("datetime2");

                    b.HasKey("CCTag");

                    b.HasIndex("ClientID");

                    b.HasIndex("ClientID1");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("FloraTrans.Models.ContainerAssignment", b =>
                {
                    b.Property<int>("ContainerID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.HasKey("ContainerID", "ClientID");

                    b.HasIndex("ClientID");

                    b.ToTable("ContainerAssignment");
                });

            modelBuilder.Entity("FloraTrans.Models.Warehouse", b =>
                {
                    b.Property<int>("WareHouseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RentedContainersFromCC")
                        .HasColumnType("int");

                    b.HasKey("WareHouseID");

                    b.ToTable("Warhouse");
                });

            modelBuilder.Entity("FloraTrans.Models.Client", b =>
                {
                    b.HasOne("FloraTrans.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactID");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("FloraTrans.Models.Container", b =>
                {
                    b.HasOne("FloraTrans.Models.Client", null)
                        .WithMany("RentedContainer")
                        .HasForeignKey("ClientID");

                    b.HasOne("FloraTrans.Models.Client", null)
                        .WithMany("ReturnedContainer")
                        .HasForeignKey("ClientID1");
                });

            modelBuilder.Entity("FloraTrans.Models.ContainerAssignment", b =>
                {
                    b.HasOne("FloraTrans.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FloraTrans.Models.Container", "Container")
                        .WithMany("ClientHistory")
                        .HasForeignKey("ContainerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Container");
                });

            modelBuilder.Entity("FloraTrans.Models.Client", b =>
                {
                    b.Navigation("RentedContainer");

                    b.Navigation("ReturnedContainer");
                });

            modelBuilder.Entity("FloraTrans.Models.Container", b =>
                {
                    b.Navigation("ClientHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
